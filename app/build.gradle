apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "me.liaoheng.wallpaper"
        versionCode 111
        versionName "1.1.1"
    }

    def isSigning = true
    signingConfigs {
        config {
            try {
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
                storeFile file(STORE_FILE)
                storePassword STORE_PASSWORD
            } catch (Exception ignored) {
                isSigning = false
                printf("not signingConfigs")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (isSigning) signingConfig signingConfigs.config
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    testImplementation deps.robolectric
    testImplementation deps.junit
    //android system
    implementation deps.supportv4
    implementation deps.appcompatv7
    implementation deps.recyclerviewv7
    implementation deps.cardviewv7
    implementation deps.design
    implementation deps.palette_v7
    implementation deps.customtabs

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-core:11.8.0'

    //View "injection" library:https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'

    implementation 'com.google.code.gson:gson:2.8.0'
    implementation deps.glide
    annotationProcessor deps.glide_compiler
    implementation deps.glide_okhttp3_integration
    implementation deps.okhttp
    implementation deps.retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation deps.retrofit_adapter_rxjava
    implementation deps.rxandroid
    implementation deps.rxjava
    implementation deps.rxlifecycle
    implementation deps.rxlifecycle_android
    implementation deps.joda_time_android

    //https://github.com/ferrannp/material-preferences
    implementation 'com.fnp:material-preferences:0.1.4'

    //https://github.com/DreaminginCodeZH/SystemUiHelper
    implementation 'me.zhanghai.android.systemuihelper:library:1.0.0'

    //https://github.com/yshrsmz/LicenseAdapter
    implementation 'net.yslibrary.licenseadapter:licenseadapter:1.4.0'

    //https://github.com/H07000223/FlycoSystemBar
    implementation "com.flyco.systembar:FlycoSystemBar_Lib:1.0.0"

    //https://github.com/Clans/FloatingActionButton
    implementation 'com.github.clans:fab:1.6.4'

    //https://github.com/grandcentrix/tray
    implementation 'net.grandcentrix.tray:tray:0.12.0'

    //https://github.com/chrisbanes/PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'

    implementation 'com.github.apl-devs:appintro:v4.2.3'

    implementation 'com.github.liaoheng:common-core:0.0.6-SNAPSHOT'
    implementation 'com.github.liaoheng:common-adapter:0.0.6-SNAPSHOT'
}
apply plugin: 'com.google.gms.google-services'